# -*- coding: utf-8 -*-
"""Laboratorio1 EDD.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1kMpAMuXjilSMtxzXWpI_SII-7csK4glz
"""

import json
import pandas as pd
import os
import io

PeliculasMasVendidas = '/content/drive/MyDrive/JSON/PeliculasMasVendidas.json'
Peliculas = '/content/drive/MyDrive/JSON/peliculas.json'
Compras = '/content/drive/MyDrive/JSON/compras.json'
Clientes = '/content/drive/MyDrive/JSON/clientes.json'
MejorCliente = '/content/drive/MyDrive/JSON/TheBestClient.json'
Ventas = '/content/drive/MyDrive/JSON/ventas.json'

with open(Peliculas, 'r') as f:
  dataPeliculas = json.load(f)

with open(Compras, 'r') as f:
  dataCompras = json.load(f)

with open(Clientes, 'r') as f:
  dataClientes = json.load(f)

peliculasMasVendidasList = []
for clave, valor in dataPeliculas.items():
  for peliculas in valor:
    contador = 0
    for k, v in peliculas.items():
      if k == 'idPelicula':
          for clave2, valor2 in dataCompras.items():
            for compra in valor2:
              for key, val in compra.items():
                if key == 'idMovie':
                  if val == v:
                    contador += 1
    peliculasMasVendidasList.append({'Pelicula': peliculas['title'], 'Cantidad': contador})

with open(PeliculasMasVendidas, 'w') as f:
  json.dump(peliculasMasVendidasList, f)



elMejorCliente = []
for clave, valor in dataClientes.items():
  for clientes in valor:
    contador = 0
    for k, v in clientes.items():
      if k == ('idCliente'):
        for clave2, valor2 in dataCompras.items():
          for compras in valor2:
            for key, val in compras.items():
              if key == ('idClient'):
                if val == v:
                  contador += 1
    elMejorCliente.append({'Cliente': clientes['name'], 'Cantidad': contador})

with open(MejorCliente, 'w') as f:
  json.dump(elMejorCliente, f)

fecha = input('Ingrese la fecha (YYYY-MM-DD): ')

compras = []
for clave, valor in dataCompras.items():
  for elemento in valor:
    for key, val in elemento.items():
      if(key == 'fechaCompra'):
        if (val >= fecha):
          compras.append(elemento)

with open(Ventas, 'w') as f:
  json.dump(compras, f)

with open(Ventas, 'r') as f:
  dataVentas = json.load(f)

df = pd.DataFrame(dataVentas)
df['fechaCompra'] = pd.to_datetime(df['fechaCompra'])
#Agrupa la cantidad las ventas y luego las cuenta
ventas = df.groupby(pd.Grouper(key='fechaCompra'))['idCompra'].count()

import matplotlib.pyplot as plt
import numpy as np

with open(PeliculasMasVendidas, 'r') as f:
  data = json.load(f)

limite = 0

peliculas = [item['Pelicula'] for item in data if item['Cantidad'] > limite]
cantidades = [item['Cantidad'] for item in data if item['Cantidad'] > limite]

sorted_tipo_producto = sorted(zip(cantidades, peliculas), reverse=True)
cantidades, peliculas = zip(*sorted_tipo_producto)

plt.figure(figsize=(8,6))
plt.bar(peliculas, cantidades, color='skyblue')
plt.xlabel('Película')
plt.ylabel('Cantidad')
plt.title('Cantidad de Películas')
plt.xticks(rotation=45)
plt.tight_layout()

plt.show()

plt.figure(figsize=(8,6))
plt.pie(cantidades, labels=peliculas, autopct='%1.1f%%', startangle=140, colors=plt.cm.Paired.colors)
plt.title('Proporción de Cantidades por Película')
plt.axis('equal')

plt.show()

with open(MejorCliente, 'r') as f:
  client = json.load(f)

limite = 0

clientes = [item['Cliente'] for item in client if item['Cantidad'] > limite]
cantidades = [item['Cantidad'] for item in client if item['Cantidad'] > limite]

sorted_tipo_producto = sorted(zip(cantidades, clientes), reverse=True)
cantidades, clientes = zip(*sorted_tipo_producto)

plt.figure(figsize=(8,6))
plt.bar(clientes, cantidades, color='skyblue')
plt.xlabel('Clientes')
plt.ylabel('Compras')
plt.title('Cantidad de compras por cliente')
plt.xticks(rotation=45)
plt.tight_layout()

plt.show()

plt.figure(figsize=(8,6))
plt.pie(cantidades, autopct='%1.1f%%', startangle=140, colors=plt.cm.Paired.colors)
plt.title('Proporción de Cantidades por Película')
plt.axis('equal')
plt.legend(clientes, loc="best")
plt.tight_layout()
plt.show()

import plotly.express as px
fig = px.line(ventas, x=ventas.index, y=ventas.values, title='Ventas por mes', template= "plotly_dark")
fig.show()

import plotly.express as px
fig = px.scatter(ventas, x=ventas.index, y=ventas.values, title='Ventas por mes', template= "plotly_dark")
fig.show()

plt.figure(figsize=(8,6))
plt.fill_between(ventas.index, ventas.values)
plt.xlabel('Intervalo de tiempo')
plt.ylabel('Ventas')
plt.title('Ventas por intervalo de tiempo')
plt.show()